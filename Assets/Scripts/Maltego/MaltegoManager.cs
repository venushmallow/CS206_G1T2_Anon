using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;
using Fungus;

public class MaltegoManager : MonoBehaviour
{
    [SerializeField] public Text searchBarText;
    [SerializeField] public GameObject searchBar;
    [SerializeField] public Flowchart flowchart;

    // Start is called before the first frame update
    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {
        if(Input.GetKeyUp(KeyCode.Return) || Input.GetKeyDown(KeyCode.KeypadEnter))
        {
            // Devices
            if(flowchart.SelectedBlock.BlockName.Equals("Devices"))
            {
                processQueryDevices();
            }
            // Location
            if(flowchart.SelectedBlock.BlockName.Equals("Locations"))
            {
                processQueryLocation();
            }
            // Infrastructure
            if (flowchart.SelectedBlock.BlockName.Equals("Website"))
            {
                processQueryWebsite();
            }
            if (flowchart.SelectedBlock.BlockName.Equals("Domain"))
            {
                processQueryDomain();
            }
            if(flowchart.SelectedBlock.BlockName.Equals("DNS"))
            {
                processQueryDNS();
            }
            if (flowchart.SelectedBlock.BlockName.Equals("IPv4"))
            {
                processQueryipv4();
            }
            if (flowchart.SelectedBlock.BlockName.Equals("Phone Number"))
            {
                processQueryPhone();
            }
        }
    }

    public void activateSearchBar()
    {
        searchBar.SetActive(!searchBar.activeSelf);
    }

    public void noResultsFound(string search)
    {
        Debug.Log(search);
        Fungus.Flowchart.BroadcastFungusMessage("no results found");
    }

    public void processQueryWebsite()
    {
        string search = searchBarText.text.ToLower();

        noResultsFound(search);
    }

    public void processQueryDevices()
    {
        string search = searchBarText.text.ToLower();

        noResultsFound(search);
    }

    public void processQueryLocation()
    {
        string search = searchBarText.text.ToLower();
        //if(search.Contains("moonwich bay") || search.Contains("moonwich"))
        //{
        //    Fungus.Flowchart.BroadcastFungusMessage("moonwich location");
        //}
        //else
        //{
            noResultsFound(search);
        //}
    }

    public void processQueryDomain()
    {
        string search = searchBarText.text.ToLower();

        noResultsFound(search);

    }

    public void processQueryDNS()
    {
        string search = searchBarText.text.ToLower();

        noResultsFound(search);

    }

    public void processQueryipv4()
    {
        string search = searchBarText.text.ToLower();

        noResultsFound(search);
    }

    public void processQueryPhone()
    {
        string search = searchBarText.text.ToLower();
        // 1st phone that Elio has
        if (search.Contains("82456789"))
        {
            Fungus.Flowchart.BroadcastFungusMessage("arty's 1st phone");
        }

        // phone numbers generated by Maltego
        else if(search.Contains("202-555-0314"))
        {
            Fungus.Flowchart.BroadcastFungusMessage("arty's 2nd phone");
        }
        else if (search.Contains("202-555-0460"))
        {
            Fungus.Flowchart.BroadcastFungusMessage("arty's 3rd phone");
        }
        else if (search.Contains("202-555-0648"))
        {
            Fungus.Flowchart.BroadcastFungusMessage("arty's 4th phone");
        }
        else if(search.Contains("202-555-0641"))
        {
            Fungus.Flowchart.BroadcastFungusMessage("arty's 5th phone");
        }
        else if(search.Contains("202-555-0539"))
        {
            Fungus.Flowchart.BroadcastFungusMessage("arty's 6th phone");
        }

        // no results found
        else
        {
            noResultsFound(search);
        }
    }

    public void ReturnToScene(string scene)
    {
        SceneManager.LoadScene(scene);
    }
}
